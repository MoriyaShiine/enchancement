plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/enchancement.accesswidener")
}

repositories {
    maven {
        name "cardinal components"
        url "https://ladysnake.jfrog.io/artifactory/mods"
    }
    maven {
        name "architectury"
        url "https://maven.shedaniel.me"
    }
    maven {
        name "geckolib"
        url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven"
    }
    maven {
        name "mod menu"
        url "https://maven.terraformersmc.com"
    }
    maven {
        name "modrinth"
        url "https://api.modrinth.com/maven"
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    flatDir {
        dirs "include"
    }

}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    implementation "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
    annotationProcessor "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
    include "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinal_components_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinal_components_version}"
    modImplementation "maven.modrinth:midnightlib:${midnightlib_version}"
    include "maven.modrinth:midnightlib:${midnightlib_version}"
    modImplementation "com.github.emilyploszaj:step-height-entity-attribute:${step_height_entity_attribute_version}"
    include "com.github.emilyploszaj:step-height-entity-attribute:${step_height_entity_attribute_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation("com.github.Virtuoel:Pehkui:${pehkui_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modRuntimeOnly "maven.modrinth:tooltipfix:${tooltipfix_version}"

    /*
    modCompileOnly("com.github.apace100:apoli:${apoli_version}") {
        exclude(group: "*")
    }
     */
    modCompileOnly "dev.architectury:architectury-fabric:${architectury_version}"
    modCompileOnly "software.bernie.geckolib:geckolib-fabric-${geckolib_version}"
    /* modCompileOnly "com.github.Ladysnake:Impaled:${impaled_version}" */
    modCompileOnly "maven.modrinth:sodium:${sodium_version}"
    modRuntimeOnly "maven.modrinth:sodium:${sodium_version}"
    implementation "org.joml:joml:1.10.4"

    modRuntimeOnly "com.terraformersmc:modmenu:${mod_menu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
